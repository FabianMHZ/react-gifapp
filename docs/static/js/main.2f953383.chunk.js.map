{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gift","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGif","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OAEI,sBAAMC,SAXS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAC5BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAMd,SAEI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAnBgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAEXC,EAFW,iDAEqCC,UAAUH,GAF/C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIIA,EAAKC,OAJT,uBAIVC,EAJU,EAIVA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaXM,GAbW,4CAAF,sDCCXO,EAAc,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,IAAIU,EAAW,EAAXA,MAE7B,OACI,sBAAKI,UAAW,OAAhB,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAc,IAAD,EACXd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAuBrC,OAjBAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEnBC,YAAW,WAEPJ,EAAS,CACLf,KAAKkB,EACLL,SAAS,MAEf,UAIR,CAACpB,IAIIqB,EDlBqBM,CAAY3B,GAA5Ba,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAWf,OACA,qCACA,6BAAKpB,IACJoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAGYH,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEtBhBiB,EAAe,WAAI,MAIQ1C,mBAAS,CAAC,aAJlB,mBAIrB2C,EAJqB,KAIT5C,EAJS,KAU5B,OAEI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI4C,EAAWpB,KAAI,SAAAT,GAAQ,OAEnB,cAAC,EAAD,CACAA,SAAUA,GADIA,YClB9B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2f953383.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setcategorias}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange=(e)=>{\r\n        setinputValue(e.target.value)\r\n    }\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n        setcategorias(cats=>[inputValue,...cats]);\r\n        setinputValue('');\r\n       // console.log('submit hecho');\r\n    }\r\n}\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n        {/* <h1>{inputValue}</h1> */}\r\n            <input\r\n            type=\"text\"  \r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n\r\n    setcategorias: PropTypes.func.isRequired\r\n}\r\n export default AddCategory;","\r\n    export const getGifs= async(category)=>{\r\n\r\n        const  url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=10&api_key=LvVlQRNBMcfHJED2HRdSORX6xggkqY1u`;\r\n        const resp = await fetch(url);\r\n        const { data} = await resp.json();\r\n        const gift = data.map(img=>{\r\n            return{\r\n                id:img.id,\r\n                title: img.title,\r\n                url:img.images.downsized_medium.url,\r\n            }\r\n        })\r\n       // console.log(gift);\r\n        return gift;\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({url,title}) => {\r\n    // console.log(url,title);\r\n    return (\r\n        <div className =\"card\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    //const [count, setcount] = useState(0);\r\n    const {data:images,loading}=useFetchGif(category);\r\n\r\n\r\n /*    const [images, setimages] = useState([])\r\n    useEffect( () => {\r\n        getGifs(category).then(imgs=>(\r\n            setimages(imgs)\r\n        ))\r\n        \r\n    }, [category]) */\r\n\r\n        return (\r\n        <>\r\n        <h2>{category}</h2>\r\n        {loading && <p>Loading</p>}\r\n        <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map(img =>(\r\n                    <GifGridItem\r\n                    key={img.id}\r\n                    {...img}\r\n                    />\r\n    ))\r\n                }\r\n            \r\n            </div>\r\n            </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGif = (category) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category).then(imgs=>{\r\n\r\n            setTimeout(()=>{\r\n\r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false,\r\n                });\r\n            },3000);\r\n            \r\n        })\r\n\r\n    },[category])\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n","\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = ()=>{\r\n\r\n    //const categorias =['Onepunch','Naruto','Dragonball'];\r\n    \r\n    const [categorias, setcategorias] = useState(['Onepunch']);\r\n    // const handleAdd =()=>{\r\n\r\n    //     //setcategorias([...categorias,'Shingeki']);\r\n    //     setcategorias(cats=>[...cats,'Shingeki']);\r\n    // }\r\n    return (\r\n\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setcategorias={setcategorias}/>\r\n        <hr></hr>\r\n        {/* <button onClick ={handleAdd}>Agregar</button> */}\r\n        <ol>\r\n        {\r\n            categorias.map(category=>(\r\n\r\n                <GifGrid key={category}\r\n                category={category}/>\r\n            ))\r\n                \r\n\r\n            \r\n        }\r\n\r\n        </ol>\r\n\r\n\r\n        \r\n        \r\n        </>\r\n    \r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\n\n//const divRoot = document.querySelector('#root');\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}